package com.example.demo;

import java.util.ArrayList;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.DisposableBean;
import org.springframework.stereotype.Component;
import org.springframework.stereotype.Service;

@Component
public class KafkaLoadGenerator implements DisposableBean, Runnable {
	private static final Logger log = LoggerFactory.getLogger(KafkaLoadGenerator.class.getName());
	
	private Thread thread;
	ArrayList<KafkaLoadRunner> runners = new ArrayList<>();
	
	
	KafkaLoadGenerator() {
		log.info("Starting Kafka Load Generator");
		this.thread = new Thread(this);

	}
	
	
	@Override
	public void run() { 
		int generatorCount = 50;
				
		for(int i=0;i<generatorCount;i++) {
			log.info("Starting Thread "+i);
			KafkaLoadRunner klr = new KafkaLoadRunner();
			Thread runnerThread = new Thread(klr);
			runners.add(klr);
		}
	}
	
	@Override
	public void destroy() {
		int cnt=1;
		for (KafkaLoadRunner kafkaLoadRunner : runners) {
			log.info("Stopping Thread "+cnt);
			kafkaLoadRunner.stop();
		}
	}
}
